# Generated by jeweler
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Jeweler::Tasks in Rakefile, and run 'rake gemspec'
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = "rubylog"
  s.version = "1.0.0"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Bern\u{e1}t Kall\u{f3}"]
  s.date = "2013-02-27"
  s.description = "Rubylog is an embedded Prolog language and interpreter for Ruby."
  s.email = "kallo.bernat@gmail.com"
  s.executables = ["rubylog"]
  s.extra_rdoc_files = [
    "LICENSE.txt",
    "README.hu.rb",
    "README.rdoc"
  ]
  s.files = [
    ".document",
    ".rspec",
    "Gemfile",
    "Gemfile.lock",
    "LICENSE.txt",
    "README.hu.rb",
    "README.rdoc",
    "Rakefile",
    "VERSION",
    "bin/rubylog",
    "examples/dcg.rb",
    "examples/dcg2.rb",
    "examples/enumerators.rb",
    "examples/factorial.rb",
    "examples/hanoi.rb",
    "examples/hello.rb",
    "examples/parsing.rb",
    "examples/primitives.rb",
    "examples/theory.rb",
    "lib/rubylog.rb",
    "lib/rubylog/builtins/default.rb",
    "lib/rubylog/builtins/file_system.rb",
    "lib/rubylog/builtins/logic.rb",
    "lib/rubylog/builtins/reflection.rb",
    "lib/rubylog/builtins/term.rb",
    "lib/rubylog/dsl.rb",
    "lib/rubylog/dsl/array_splat.rb",
    "lib/rubylog/dsl/primitives.rb",
    "lib/rubylog/dsl/thats.rb",
    "lib/rubylog/dsl/variables.rb",
    "lib/rubylog/errors.rb",
    "lib/rubylog/interfaces/assertable.rb",
    "lib/rubylog/interfaces/callable.rb",
    "lib/rubylog/interfaces/composite_term.rb",
    "lib/rubylog/interfaces/predicate.rb",
    "lib/rubylog/interfaces/procedure.rb",
    "lib/rubylog/interfaces/term.rb",
    "lib/rubylog/mixins/array.rb",
    "lib/rubylog/mixins/class.rb",
    "lib/rubylog/mixins/hash.rb",
    "lib/rubylog/mixins/kernel.rb",
    "lib/rubylog/mixins/method.rb",
    "lib/rubylog/mixins/object.rb",
    "lib/rubylog/mixins/proc.rb",
    "lib/rubylog/mixins/string.rb",
    "lib/rubylog/mixins/symbol.rb",
    "lib/rubylog/simple_procedure.rb",
    "lib/rubylog/structure.rb",
    "lib/rubylog/theory.rb",
    "lib/rubylog/variable.rb",
    "logic/builtins/file_system_logic.rb",
    "logic/builtins/reflection_logic.rb",
    "logic/dereference_logic.rb",
    "logic/directory_structure_logic.rb",
    "logic/dsl_logic.rb",
    "logic/errors_logic.rb",
    "logic/guard_logic.rb",
    "logic/list_logic.rb",
    "logic/map_logic.rb",
    "logic/multitheory.rb",
    "logic/recursion_logic.rb",
    "logic/string_logic.rb",
    "logic/thats_logic.rb",
    "logic/variable_logic.rb",
    "rubylog.gemspec",
    "spec/bartak_guide_spec.rb",
    "spec/builtins/all_spec.rb",
    "spec/builtins/and_spec.rb",
    "spec/builtins/array_spec.rb",
    "spec/builtins/branch_or_spec.rb",
    "spec/builtins/cut_spec.rb",
    "spec/builtins/fail_spec.rb",
    "spec/builtins/false_spec.rb",
    "spec/builtins/in_spec.rb",
    "spec/builtins/is_false_spec.rb",
    "spec/builtins/is_spec.rb",
    "spec/builtins/matches_spec.rb",
    "spec/builtins/or_spec.rb",
    "spec/builtins/splits_to.rb",
    "spec/builtins/then_spec.rb",
    "spec/builtins/true_spec.rb",
    "spec/clause_spec.rb",
    "spec/compilation_spec.rb",
    "spec/custom_classes_spec.rb",
    "spec/dereference.rb",
    "spec/inriasuite/README",
    "spec/inriasuite/abolish",
    "spec/inriasuite/and",
    "spec/inriasuite/arg",
    "spec/inriasuite/arith_diff",
    "spec/inriasuite/arith_eq",
    "spec/inriasuite/arith_gt",
    "spec/inriasuite/arith_gt=",
    "spec/inriasuite/arith_lt",
    "spec/inriasuite/arith_lt=",
    "spec/inriasuite/asserta",
    "spec/inriasuite/assertz",
    "spec/inriasuite/atom",
    "spec/inriasuite/atom_chars",
    "spec/inriasuite/atom_codes",
    "spec/inriasuite/atom_concat",
    "spec/inriasuite/atom_length",
    "spec/inriasuite/atomic",
    "spec/inriasuite/bagof",
    "spec/inriasuite/call",
    "spec/inriasuite/catch-and-throw",
    "spec/inriasuite/char_code",
    "spec/inriasuite/clause",
    "spec/inriasuite/compound",
    "spec/inriasuite/copy_term",
    "spec/inriasuite/current_input",
    "spec/inriasuite/current_output",
    "spec/inriasuite/current_predicate",
    "spec/inriasuite/current_prolog_flag",
    "spec/inriasuite/cut",
    "spec/inriasuite/fail",
    "spec/inriasuite/file_manip",
    "spec/inriasuite/findall",
    "spec/inriasuite/float",
    "spec/inriasuite/functor",
    "spec/inriasuite/functor-bis",
    "spec/inriasuite/halt",
    "spec/inriasuite/if-then",
    "spec/inriasuite/if-then-else",
    "spec/inriasuite/inriasuite.obp",
    "spec/inriasuite/inriasuite.pl",
    "spec/inriasuite/integer",
    "spec/inriasuite/is",
    "spec/inriasuite/junk",
    "spec/inriasuite/nonvar",
    "spec/inriasuite/not_provable",
    "spec/inriasuite/not_unify",
    "spec/inriasuite/number",
    "spec/inriasuite/number_chars",
    "spec/inriasuite/number_codes",
    "spec/inriasuite/once",
    "spec/inriasuite/or",
    "spec/inriasuite/repeat",
    "spec/inriasuite/retract",
    "spec/inriasuite/set_prolog_flag",
    "spec/inriasuite/setof",
    "spec/inriasuite/sub_atom",
    "spec/inriasuite/t",
    "spec/inriasuite/t_foo.pl",
    "spec/inriasuite/term_diff",
    "spec/inriasuite/term_eq",
    "spec/inriasuite/term_gt",
    "spec/inriasuite/term_gt=",
    "spec/inriasuite/term_lt",
    "spec/inriasuite/term_lt=",
    "spec/inriasuite/true",
    "spec/inriasuite/unify",
    "spec/inriasuite_spec.rb",
    "spec/queries_spec.rb",
    "spec/recursion_spec.rb",
    "spec/ruby_code_spec.rb",
    "spec/rules_spec.rb",
    "spec/spec_helper.rb",
    "spec/theory_spec.rb",
    "spec/unification_spec.rb",
    "spec/variable_spec.rb"
  ]
  s.homepage = "https://github.com/cie/rubylog"
  s.licenses = ["MIT"]
  s.require_paths = ["lib"]
  s.rubygems_version = "1.8.15"
  s.summary = "An embedded Prolog interpreter"

  if s.respond_to? :specification_version then
    s.specification_version = 3

    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
      s.add_development_dependency(%q<rspec>, ["~> 2.8.0"])
      s.add_development_dependency(%q<yard>, ["~> 0.7"])
      s.add_development_dependency(%q<rdoc>, ["~> 3.12"])
      s.add_development_dependency(%q<cucumber>, [">= 0"])
      s.add_development_dependency(%q<bundler>, ["~> 1.0.0"])
      s.add_development_dependency(%q<jeweler>, ["~> 1.8.3"])
      s.add_development_dependency(%q<simplecov>, [">= 0"])
      s.add_development_dependency(%q<reek>, ["~> 1.2.8"])
      s.add_development_dependency(%q<roodi>, ["~> 2.1.0"])
    else
      s.add_dependency(%q<rspec>, ["~> 2.8.0"])
      s.add_dependency(%q<yard>, ["~> 0.7"])
      s.add_dependency(%q<rdoc>, ["~> 3.12"])
      s.add_dependency(%q<cucumber>, [">= 0"])
      s.add_dependency(%q<bundler>, ["~> 1.0.0"])
      s.add_dependency(%q<jeweler>, ["~> 1.8.3"])
      s.add_dependency(%q<simplecov>, [">= 0"])
      s.add_dependency(%q<reek>, ["~> 1.2.8"])
      s.add_dependency(%q<roodi>, ["~> 2.1.0"])
    end
  else
    s.add_dependency(%q<rspec>, ["~> 2.8.0"])
    s.add_dependency(%q<yard>, ["~> 0.7"])
    s.add_dependency(%q<rdoc>, ["~> 3.12"])
    s.add_dependency(%q<cucumber>, [">= 0"])
    s.add_dependency(%q<bundler>, ["~> 1.0.0"])
    s.add_dependency(%q<jeweler>, ["~> 1.8.3"])
    s.add_dependency(%q<simplecov>, [">= 0"])
    s.add_dependency(%q<reek>, ["~> 1.2.8"])
    s.add_dependency(%q<roodi>, ["~> 2.1.0"])
  end
end

